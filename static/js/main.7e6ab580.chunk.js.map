{"version":3,"sources":["components/PrivateRoute/index.tsx","components/SideMenu/style.ts","store/actions.ts","firebase.ts","store/saga.js","store/rootSaga.ts","store/index.ts","components/Avatar/style.ts","components/Avatar/index.tsx","components/SideMenu/ProfileInfo.tsx","components/SideMenu/index.tsx","components/RegistrationForm/style.tsx","components/RegistrationForm/index.tsx","handlers/LoginHandler/style.tsx","handlers/LoginHandler/CreateAccount.tsx","components/LoginForm/style.tsx","components/LoginForm/index.tsx","components/SocialMediaLogin/style.ts","components/SocialMediaLogin/index.tsx","handlers/LoginHandler/SignIn.tsx","handlers/LoginHandler/index.tsx","handlers/UsersHandler/style.tsx","handlers/UsersHandler/index.tsx","App.tsx","index.tsx"],"names":["PrivateRoute","component","path","exact","isAuth","to","Wrapper","styled","div","NavLinks","nav","Link","NavLink","Button","button","UsernameText","p","loginButtonClicked","createAction","logoutButtonClicked","userLogin","userLogout","signUpButtonClicked","actions","createAccountButtonClicked","loginWithFacebookButtonClicked","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","login","email","password","signInWithEmailAndPassword","catch","error","console","log","loginWithFacebook","signInWithPopup","FacebookAuthProvider","then","result","credential","user","code","message","logout","signOut","loginWithFacebookWatcher","loginWatcher","logoutWatcher","authChannelWatcher","call","take","payload","eventChannel","emit","onAuthStateChanged","id","uid","authChannel","put","rootSaga","all","takeLatest","getType","persistConfig","key","storage","blacklist","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","state","mode","undefined","loading","action","produce","draft","type","store","createStore","composeWithDevTools","applyMiddleware","run","persistStore","useTypedSelector","useSelector","Image","img","Avatar","src","alt","ProfileInfo","SideMenu","dispatch","useDispatch","history","useHistory","useLocation","pathname","activeStyle","opacity","size","onClick","push","Form","FormikForm","Input","FormikField","InputSpan","span","ErrorWrapper","ErrorText","IconContainer","Schema","Yup","shape","firstName","required","min","max","lastName","confirmPassword","oneOf","RegistrationForm","initialValues","onSubmit","values","validationSchema","errors","touched","name","placeholder","SectionWrapper","MainContainer","SubContainer","SignInButton","CreateAccount","LoginForm","SocialMediaLogin","SignIn","LoginHandler","useEffect","UsersHandler","App","className","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e6ab580.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n  isAuth: boolean;\n}> = ({ component, path, exact, isAuth }) => {\n  return isAuth ? (\n    <Route path={path} exact={exact} component={component} />\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: Yellow;\n  padding: 30px;\n  justify-content: space-between;\n  background: #55b6a8;\n  p {\n    color: #fff;\n    margin: 0;\n    font-weight: 400;\n  }\n  align-items: center;\n  box-shadow: 0px 22px 24px 0px rgba(46, 51, 51, 0.07);\n`;\n\nexport const NavLinks = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #fff;\n  padding: 20px;\n  font-weight: 0;\n  opacity: 0.6;\n  transition: 0.3s;\n  display: flex;\n  svg {\n    margin-right: 10px;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  background: none;\n  color: #fff;\n`;\n\nexport const UsernameText = styled.p`\n  margin-top: 10px;\n`;\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport { User } from \"./types\";\n\nconst loginButtonClicked = createAction(\"login button clicked\")<{\n  email: string;\n  password: string;\n}>();\nconst logoutButtonClicked = createAction(\"logout button clicked\")();\nconst userLogin = createAction(\"user logged in\")<User>();\nconst userLogout = createAction(\"user logged out\")();\nconst signUpButtonClicked = createAction(\"sign up button clicked\")();\nconst createAccountButtonClicked = createAction(\n  \"create account button clicked\"\n)();\nconst loginWithFacebookButtonClicked = createAction(\n  \"login with facebook button clicked\"\n)();\n\nexport const actions = {\n  createAccountButtonClicked,\n  signUpButtonClicked,\n  loginButtonClicked,\n  logoutButtonClicked,\n  userLogin,\n  userLogout,\n  loginWithFacebookButtonClicked,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { eventChannel } from \"redux-saga\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n});\n\nconst auth = firebase.auth();\n\nexport const login = (email: string, password: string) =>\n  void auth\n    .signInWithEmailAndPassword(email, password)\n    .catch(function (error: any) {\n      console.log(error);\n    });\n\nexport const loginWithFacebook = () =>\n  // firebase\n  void auth\n    .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n    .then(function (result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(user);\n      // ...\n    })\n    .catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n\nexport const logout = () => void auth.signOut();\n\nexport const subscribeToAuth = () =>\n  eventChannel((emit) => {\n    auth.onAuthStateChanged((user) => {\n      emit(user ? { email: user.email, id: user.uid } : false);\n    });\n    return () => {\n      console.log(\"destroy chan auth\");\n    };\n  });\n","import { actions } from \"./actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { take, put, call } from \"redux-saga/effects\";\nimport {\n  subscribeToAuth,\n  login,\n  logout,\n  loginWithFacebook,\n} from \"./../firebase\";\n\nexport function* registrationSaga({ payload }) {\n  try {\n    // here is where we would handle api calls/interacting with the database...\n    yield put(actions.userRegistered({ ...payload, id: uuidv4() }));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* loginWithFacebookWatcher() {\n  try {\n    yield call(loginWithFacebook);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* loginWatcher() {\n  while (true) {\n    const {\n      payload: { email, password },\n    } = yield take(actions.loginButtonClicked);\n    try {\n      yield call(login, email, password);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* logoutWatcher() {\n  while (true) {\n    yield take(actions.logoutButtonClicked);\n    yield call(logout);\n  }\n}\n\nexport function* authChannelWatcher() {\n  const authChannel = yield subscribeToAuth();\n  while (true) {\n    const user = yield take(authChannel);\n    if (user)\n      yield put(\n        actions.userLogin({\n          email: user.email,\n          id: user.id,\n        })\n      );\n    else yield put(actions.userLogout());\n  }\n}\n","import { all, takeLatest } from \"@redux-saga/core/effects\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"./actions\";\nimport {\n  loginWatcher,\n  logoutWatcher,\n  authChannelWatcher,\n  loginWithFacebookWatcher,\n} from \"./saga\";\n\nexport function* rootSaga() {\n  yield all([\n    loginWatcher(),\n    authChannelWatcher(),\n    logoutWatcher(),\n    takeLatest(\n      getType(actions.loginWithFacebookButtonClicked),\n      loginWithFacebookWatcher\n    ),\n  ]);\n}\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootSaga } from \"./rootSaga\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { User } from \"./types\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"user\", \"mode\"],\n};\n\nconst initialState = () => ({\n  mode: \"Sign In\" as \"Sign In\" | \"Sign Up\",\n  user: undefined as undefined | User,\n  loading: false,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.createAccountButtonClicked):\n        draft.mode = \"Sign In\";\n        break;\n      case getType(actions.signUpButtonClicked):\n        draft.mode = \"Sign Up\";\n        break;\n      case getType(actions.loginButtonClicked):\n        draft.loading = true;\n        break;\n      case getType(actions.userLogin):\n        draft.user = action.payload;\n        draft.loading = false;\n        break;\n      case getType(actions.logoutButtonClicked):\n      case getType(actions.userLogout):\n        draft.user = undefined;\n        break;\n    }\n  });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  padding: 0;\n  margin: 0;\n  vertical-align: middle;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n`;\n","import React from \"react\";\nimport { Image } from \"./style\";\n\nexport const Avatar: React.FC<{ img: string }> = ({ img }) => {\n  return <Image src={img} alt=\"placeholder avatar\" />;\n};\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { Avatar } from \"../Avatar\";\nimport { UsernameText } from \"./style\";\n\nexport const ProfileInfo = () => {\n  const user = useTypedSelector((state) => state.user);\n  return (\n    <span>\n      <Avatar img={process.env.PUBLIC_URL + \"/placeholder.jpg\"} />\n      <UsernameText>{user?.email}</UsernameText>\n    </span>\n  );\n};\n","import React from \"react\";\nimport { Wrapper, NavLinks, Link, Button } from \"./style\";\nimport { ProfileInfo } from \"./ProfileInfo\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaLock, FaUsers } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nexport const SideMenu = () => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const location = useLocation();\n  const isLoggedIn = location.pathname !== \"/\";\n  const handleLogout = () => {\n    dispatch(actions.logoutButtonClicked());\n    history.push(\"/\");\n  };\n  return isLoggedIn ? (\n    <Wrapper>\n      <ProfileInfo />\n      <NavLinks>\n        <Link exact to=\"/users\" activeStyle={{ opacity: \"1\" }}>\n          <FaUsers size=\"24\" />\n          Users\n        </Link>\n      </NavLinks>\n      <Button onClick={handleLogout}>\n        <FaLock /> Logout\n      </Button>\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const InputSpan = styled.span`\n  display: flex;\n  flex: 1;\n  justify-content: stretch;\n  align-items: flex-end;\n  input {\n    flex: 1;\n  }\n  span:first-child {\n    margin-right: 5px;\n  }\n  span:last-child {\n    margin-left: 5px;\n  }\n`;\n\nexport const ErrorWrapper = styled.span`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  input {\n    flex: 0;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  InputSpan,\n  ErrorWrapper,\n  ErrorText,\n  IconContainer,\n} from \"./style\";\nimport { FaUser, FaEnvelope, FaLock } from \"react-icons/fa\";\n\nconst Schema = Yup.object().shape({\n  firstName: Yup.string()\n    .required(\"First name is required\")\n    .min(2, \"Minimum 2 characters\")\n    .max(50, \"Maximum 15 characters\"),\n  lastName: Yup.string()\n    .required(\"Last name is required\")\n    .min(2, \"Minimum 2 characters\")\n    .max(50, \"Maximum 15 characters\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\n    .required(\"You must confirm your password\"),\n});\n\nexport const RegistrationForm = () => {\n  const handleSignup = (values: any) => void {};\n\n  const initialValues: any = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, actions) => {\n        handleSignup(values);\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <InputSpan>\n            <ErrorWrapper>\n              {errors.firstName && touched.firstName && (\n                <ErrorText>{errors.firstName}</ErrorText>\n              )}\n              <IconContainer>\n                <FaUser />\n                <Input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  type=\"text\"\n                ></Input>\n              </IconContainer>\n            </ErrorWrapper>\n            <ErrorWrapper>\n              {errors.lastName && touched.lastName && (\n                <ErrorText>{errors.lastName}</ErrorText>\n              )}\n              <IconContainer>\n                <FaUser />\n                <Input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  type=\"text\"\n                ></Input>\n              </IconContainer>\n            </ErrorWrapper>\n          </InputSpan>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <ErrorText>{errors.confirmPassword}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 30px 15%;\n  justify-content: center;\n  color: #55b6a8;\n  align-items: center;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background: #55b6a8;\n  color: #fff;\n  width: 300px;\n  h1 {\n    margin: 0;\n  }\n  p {\n    margin: 20px 0;\n  }\n  button {\n    padding: 15px 30px;\n  }\n`;\n\nexport const SignInButton = styled.button`\n  border: 1px solid #fff;\n  background: transparent;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RegistrationForm } from \"../../components/RegistrationForm\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const CreateAccount = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome Back!</h1>\n        <p>Already have an account? Click below to login!</p>\n        <SignInButton\n          onClick={() => dispatch(actions.createAccountButtonClicked())}\n        >\n          Sign In\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Create Account</h1>\n        <RegistrationForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  p {\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, ErrorText, IconContainer } from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const initialValues: { email: string; password: string } = {\n    email: \"\",\n    password: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        dispatch(actions.loginButtonClicked(values));\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <p>Forgot your password?</p>\n          <Button type=\"submit\">Sign In</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { Wrapper } from \"./style\";\n\nexport const SocialMediaLogin = () => {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <button\n        onClick={() => dispatch(actions.loginWithFacebookButtonClicked())}\n      >\n        fb\n      </button>\n      <button>google</button>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { SocialMediaLogin } from \"../../components/SocialMediaLogin\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const SignIn = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton onClick={() => dispatch(actions.signUpButtonClicked())}>\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Sign In</h1>\n        <SocialMediaLogin />\n        <LoginForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { CreateAccount } from \"./CreateAccount\";\nimport { Wrapper } from \"./style\";\nimport { SignIn } from \"./SignIn\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const LoginHandler = () => {\n  let history = useHistory();\n  const mode = useTypedSelector((state) => state.mode);\n  const user = useTypedSelector((state) => state.user);\n  useEffect(() => {\n    if (user) {\n      history.push(\"/users\");\n    }\n  }, [user, history]);\n\n  return !user ? (\n    <Wrapper>{mode === \"Sign Up\" ? <CreateAccount /> : <SignIn />}</Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 30px;\n  overflow: hidden;\n  /* padding: 30px 20px; */\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./style\";\n\nexport const UsersHandler = () => {\n  return <Wrapper>users</Wrapper>;\n};\n","import React from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport { PrivateRoute } from \"./components/PrivateRoute\";\r\nimport { SideMenu } from \"./components/SideMenu\";\r\nimport { LoginHandler } from \"./handlers/LoginHandler\";\r\nimport { UsersHandler } from \"./handlers/UsersHandler\";\r\nimport { useTypedSelector } from \"./store\";\r\n\r\nfunction App() {\r\n  const user = useTypedSelector((state) => state.user);\r\n  console.log(user, user !== undefined);\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <SideMenu />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginHandler} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/users\"\r\n            component={UsersHandler}\r\n            isAuth={user !== undefined}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}