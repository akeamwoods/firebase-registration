{"version":3,"sources":["store/actions.ts","firebase.ts","store/saga.js","store/rootSaga.ts","store/index.ts","components/Alert/style.ts","components/Alert/index.tsx","components/Alert/container.tsx","components/PrivateRoute/index.tsx","components/SideMenu/style.ts","components/Avatar/style.ts","components/Avatar/index.tsx","components/SideMenu/ProfileInfo.tsx","components/SideMenu/index.tsx","handlers/LoginHandler/style.tsx","components/RegistrationForm/style.tsx","components/RegistrationForm/index.tsx","components/SocialMediaLogin/style.ts","components/SocialMediaLogin/index.tsx","handlers/LoginHandler/CreateAccount.tsx","components/LoginForm/style.tsx","components/LoginForm/index.tsx","handlers/LoginHandler/SignIn.tsx","components/PasswordReset/style.ts","components/PasswordReset/index.tsx","handlers/LoginHandler/ForgotPassword.tsx","handlers/LoginHandler/index.tsx","components/ProfileCreation/style.tsx","components/DatePickerInput/style.tsx","components/DatePickerInput/index.tsx","components/ProfileCreation/index.tsx","handlers/ProfileCreationHandler/style.ts","handlers/ProfileCreationHandler/index.tsx","handlers/HomeHandler/style.tsx","handlers/HomeHandler/index.tsx","App.tsx","index.tsx"],"names":["loginButtonClicked","createAction","logoutButtonClicked","userLogin","userLogout","signUpButtonClicked","actions","createAccountButtonClicked","loginWithFacebookButtonClicked","loginWithGoogleButtonClicked","registrationButtonClicked","forgotPasswordButtonClicked","resetPasswordButtonClicked","alertCreated","alertDisplayed","alertCancelButtonClicked","alertCleared","userProfileFetched","showProfileCreationHandler","createProfileButtonClicked","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","storage","register","email","password","createUserWithEmailAndPassword","then","id","currentUser","uid","getUserInfo","catch","error","store","dispatch","uuidv4","title","message","duration","undefined","dismissible","login","signInWithEmailAndPassword","loginWithFacebook","signInWithPopup","FacebookAuthProvider","result","user","profile","name","displayName","img","photoURL","collection","doc","get","exists","set","loginWithGoogle","GoogleAuthProvider","resetPassword","sendPasswordResetEmail","logout","signOut","a","state","getState","userProfile","userRef","data","createProfile","dateOfBirth","file","ref","child","put","x","getDownloadURL","url","registrationWatcher","resetPasswordWatcher","loginWithFacebookWatcher","loginWithGoogleWatcher","loginWatcher","logoutWatcher","authChannelWatcher","cancellationSaga","addAlertSaga","createProfileSaga","take","payload","confirmPassword","call","console","log","eventChannel","emit","onAuthStateChanged","authChannel","race","delay","click","rootSaga","all","takeLatest","getType","takeEvery","persistConfig","key","blacklist","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","mode","loading","alerts","showProfileCreation","action","produce","draft","type","filter","alert","createStore","composeWithDevTools","applyMiddleware","run","persistStore","useTypedSelector","useSelector","AlertBox","styled","div","NotificationWrapper","animated","Notification","onClick","clickable","style","size","display","flexDirection","marginLeft","color","NotificationContainer","useDispatch","transition","useTransition","item","unique","trail","length","from","opacity","transform","enter","leave","map","props","PrivateRoute","component","path","exact","isAuth","to","Wrapper","NavLinks","nav","Link","NavLink","Button","button","UsernameText","p","ProfileSpan","span","Image","circle","Avatar","height","width","src","alt","ProfileInfo","profileInfo","SideMenu","useLocation","pathname","activeStyle","SectionWrapper","MainContainer","SubContainer","SignInButton","Form","FormikForm","Input","FormikField","ErrorText","IconContainer","Schema","Yup","shape","required","min","oneOf","RegistrationForm","initialValues","onSubmit","values","rootActions","validationSchema","errors","touched","placeholder","SocialMediaLogin","CreateAccount","ResetPasswordButton","LoginForm","SignIn","BackToLoginButton","PasswordReset","resetForm","ForgotPassword","LoginHandler","history","useHistory","useEffect","push","Field","input","Select","select","Header","DatePickerInput","setFieldValue","useFormikContext","useField","field","years","range","getYear","Date","months","selected","value","onChange","val","customInput","autoComplete","readOnly","renderCustomHeader","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","getMonth","target","indexOf","option","parseInt","max","nullable","ProfileCreation","useState","setFile","createRef","URL","createObjectURL","accept","event","files","Container","ProfileCreationHandler","ReactDOM","createPortal","document","body","HomeHandler","showProfileCreationPage","App","className","basename","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62fb6522.chunk.js","sourcesContent":["import { ActionType, createAction } from \"typesafe-actions\";\nimport { Alert, User, UserProfile } from \"./types\";\n\nconst loginButtonClicked = createAction(\"login button clicked\")<{\n  email: string;\n  password: string;\n}>();\nconst logoutButtonClicked = createAction(\"logout button clicked\")();\nconst userLogin = createAction(\"user logged in\")<User>();\nconst userLogout = createAction(\"user logged out\")();\nconst signUpButtonClicked = createAction(\"sign up button clicked\")();\nconst createAccountButtonClicked = createAction(\n  \"create account button clicked\"\n)();\nconst loginWithFacebookButtonClicked = createAction(\n  \"login with facebook button clicked\"\n)();\nconst loginWithGoogleButtonClicked = createAction(\n  \"login with google button clicked\"\n)();\nconst registrationButtonClicked = createAction(\"registration button clicked\")<{\n  email: string;\n  password: string;\n}>();\nconst forgotPasswordButtonClicked = createAction(\n  \"forgot password button clicked\"\n)();\nconst resetPasswordButtonClicked = createAction(\n  \"reset password button clicked\"\n)<{ email: string }>();\n\nconst alertCreated = createAction(\"alert created\")<Alert>();\nconst alertDisplayed = createAction(\"alert displayed\")<Alert>();\nconst alertCancelButtonClicked = createAction(\"alert cancel button clicked\")<\n  string\n>();\nconst alertCleared = createAction(\"alert cleared\")<string>();\nconst userProfileFetched = createAction(\"user profile fetched\")<UserProfile>();\nconst showProfileCreationHandler = createAction(\n  \"show profile creation handler\"\n)();\nconst createProfileButtonClicked = createAction(\"create profile button clicked\")<{id:string, name:string, dateOfBirth:string, file:File | null}>();\n\nexport const actions = {\n  createAccountButtonClicked,\n  signUpButtonClicked,\n  loginButtonClicked,\n  logoutButtonClicked,\n  userLogin,\n  userLogout,\n  loginWithFacebookButtonClicked,\n  loginWithGoogleButtonClicked,\n  registrationButtonClicked,\n  forgotPasswordButtonClicked,\n  resetPasswordButtonClicked,\n  alertCreated,\n  alertDisplayed,\n  alertCancelButtonClicked,\n  alertCleared,\n  userProfileFetched,\n  showProfileCreationHandler,\n  createProfileButtonClicked\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { eventChannel } from \"redux-saga\";\nimport { actions } from \"./store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { store } from \"./store\";\nimport { UserProfile } from \"./store/types\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n});\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\n\nexport const register = (email: string, password: string) =>\n  void auth\n    .createUserWithEmailAndPassword(email, password).then(() => {\n      const id = auth.currentUser?.uid;\n      if (id) getUserInfo(id);\n    })\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const login = (email: string, password: string) =>\n  void auth\n    .signInWithEmailAndPassword(email, password).then(() => {\n      const id = auth.currentUser?.uid;\n      if (id) getUserInfo(id);\n    })\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const loginWithFacebook = () =>\n  void auth\n    .signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(function(result) {\n      var user = result.user;\n      if(user){\n        const id = user.uid;\n        const profile = {name:user.displayName!,img:user.photoURL!}\n        db.collection('users').doc(id).get().then(doc => {\n          if (!doc.exists) {\n            db.collection(\"users\").doc(id).set(profile);\n            store.dispatch(actions.userProfileFetched(profile as UserProfile));\n          } else {\n            getUserInfo(id);\n          }\n        })\n      }\n    })\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const loginWithGoogle = () =>\n  void auth\n    .signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(function(result) {\n      var user = result.user;\n      if(user){\n        const id = user.uid;\n        const profile = {name:user.displayName!,img:user.photoURL!}\n        db.collection('users').doc(id).get().then(doc => {\n          if (!doc.exists) {\n            db.collection(\"users\").doc(id).set(profile);\n            store.dispatch(actions.userProfileFetched(profile as UserProfile));\n          } else {\n            getUserInfo(id);\n          }\n        })\n      }\n    })\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const resetPassword = (email: string) =>\n  void auth\n    .sendPasswordResetEmail(email)\n    .then(function () {\n      // Password reset email sent.\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Password Reset\",\n          message: `We've sent a password reset email to ${email}. Please check your inbox.`,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    })\n    .catch(function (error: any) {\n      // error\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const logout = () => void auth.signOut();\n\nexport const subscribeToAuth = () =>\n  eventChannel((emit) => {\n    auth.onAuthStateChanged((user) => {\n      emit(user ? { email: user.email, id: user.uid } : false);\n    });\n    return () => {\n      console.log(\"destroy chan auth\");\n    };\n  });\n\n\nexport const getUserInfo = async (id: string) => {\n  const state = store.getState();\n  const profile = state.userProfile;\n  const userRef = db.collection(\"users\").doc(id);\n  const doc = await userRef.get();\n  if (!doc.exists && !profile) {\n    store.dispatch(actions.showProfileCreationHandler());\n  } else {\n    const data = doc.data();\n    if (data) {\n      store.dispatch(actions.userProfileFetched(data as UserProfile));\n    }\n  }\n};\n\n\nexport const createProfile = async (id:string, name:string, dateOfBirth:string, file:File ) => {\n  if(file){\n    storage.ref('images').child(id).put(file).then(x => {\n      x.ref.getDownloadURL().then(url => {\n        db.collection(\"users\").doc(id).set({name, dateOfBirth, img:url});\n        store.dispatch(actions.userProfileFetched({name, dateOfBirth, img:url} as UserProfile))\n      })\n    })\n  } else {\n    db.collection(\"users\").doc(id).set({name, dateOfBirth});\n    store.dispatch(actions.userProfileFetched({name, dateOfBirth} as UserProfile));\n  }\n  store.dispatch(\n    actions.alertCreated({\n      id: uuidv4(),\n      title: \"Profile Updated\",\n      message: \"Your profile has been successfully updated.\",\n      duration: 6000,\n      dismissible: true,\n    })\n  );\n};\n\n\n\n","import { actions } from \"./actions\";\nimport { take, put, call, race, delay } from \"redux-saga/effects\";\nimport {\n  subscribeToAuth,\n  login,\n  logout,\n  loginWithFacebook,\n  loginWithGoogle,\n  register,\n  resetPassword,\n  getUserInfo,\n  createProfile,\n} from \"./../firebase\";\n\nexport function* registrationWatcher() {\n  while (true) {\n    const {\n      payload: { email, password, confirmPassword },\n    } = yield take(actions.registrationButtonClicked);\n    try {\n      yield call(register, email, password, confirmPassword);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* resetPasswordWatcher() {\n  while (true) {\n    const {\n      payload: { email },\n    } = yield take(actions.resetPasswordButtonClicked);\n    try {\n      yield call(resetPassword, email);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* loginWithFacebookWatcher() {\n  try {\n    yield call(loginWithFacebook);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* loginWithGoogleWatcher() {\n  try {\n    yield call(loginWithGoogle);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* loginWatcher() {\n  while (true) {\n    const {\n      payload: { email, password },\n    } = yield take(actions.loginButtonClicked);\n    try {\n      yield call(login, email, password);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* logoutWatcher() {\n  while (true) {\n    yield take(actions.logoutButtonClicked);\n    yield call(logout);\n  }\n}\n\nexport function* authChannelWatcher() {\n  const authChannel = yield subscribeToAuth();\n  while (true) {\n    const user = yield take(authChannel);\n    if (user)\n      yield put(\n        actions.userLogin({\n          email: user.email,\n          id: user.id,\n        })\n      );\n    else yield put(actions.userLogout());\n  }\n}\n\nfunction* cancellationSaga(id) {\n  while (true) {\n    const { payload } = yield take(actions.alertCancelButtonClicked);\n    if (id === payload) return;\n  }\n}\n\nexport function* addAlertSaga({ payload }) {\n  try {\n    yield put(actions.alertDisplayed(payload));\n    if (payload.duration) {\n      yield race({\n        delay: delay(payload.duration),\n        click: cancellationSaga(payload.id),\n      });\n    } else {\n      yield race({\n        click: cancellationSaga(payload.id),\n      });\n    }\n\n    yield put(actions.alertCleared(payload.id));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* getProfileSaga({ payload: { id } }) {\n  try {\n    if (id) {\n      yield call(getUserInfo(id));\n    }\n  } catch (error) {}\n}\n\nexport function* createProfileSaga({\n  payload: { id, name, dateOfBirth, file },\n}) {\n  try {\n    if (id) {\n      yield call(createProfile, id, name, dateOfBirth, file);\n    }\n  } catch (error) {}\n}\n","import { all, takeLatest, takeEvery } from \"@redux-saga/core/effects\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"./actions\";\nimport {\n  loginWatcher,\n  logoutWatcher,\n  resetPasswordWatcher,\n  authChannelWatcher,\n  loginWithFacebookWatcher,\n  loginWithGoogleWatcher,\n  registrationWatcher,\n  addAlertSaga,\n  createProfileSaga\n} from \"./saga\";\n\nexport function* rootSaga() {\n  yield all([\n    loginWatcher(),\n    authChannelWatcher(),\n    logoutWatcher(),\n    resetPasswordWatcher(),\n    registrationWatcher(),\n    takeLatest(\n      getType(actions.loginWithFacebookButtonClicked),\n      loginWithFacebookWatcher\n    ),\n    takeLatest(\n      getType(actions.loginWithGoogleButtonClicked),\n      loginWithGoogleWatcher\n    ),\n    takeEvery(getType(actions.alertCreated), addAlertSaga),\n    takeEvery(getType(actions.createProfileButtonClicked), createProfileSaga)\n  ]);\n}\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootSaga } from \"./rootSaga\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { Alert, User, UserProfile } from \"./types\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"user\", \"mode\", \"alerts\", \"loading\", \"showProfileCreation\"],\n};\n\nconst initialState = () => ({\n  mode: \"Sign In\" as \"Sign In\" | \"Sign Up\" | \"Forgot Password\",\n  user: undefined as undefined | User,\n  loading: false,\n  alerts: [] as Alert[],\n  userProfile: undefined as undefined | UserProfile,\n  showProfileCreation: false,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.createAccountButtonClicked):\n        draft.mode = \"Sign In\";\n        break;\n      case getType(actions.signUpButtonClicked):\n        draft.mode = \"Sign Up\";\n        break;\n      case getType(actions.loginButtonClicked):\n        draft.loading = true;\n        break;\n      case getType(actions.userLogin):\n        draft.user = action.payload;\n        draft.loading = false;\n        break;\n      case getType(actions.logoutButtonClicked):\n      case getType(actions.userLogout):\n        draft.user = undefined;\n        draft.userProfile = undefined;\n        break;\n      case getType(actions.forgotPasswordButtonClicked):\n        draft.mode = \"Forgot Password\";\n        break;\n      case getType(actions.alertDisplayed):\n        draft.alerts = [...draft.alerts, action.payload];\n        break;\n      case getType(actions.alertCleared):\n        draft.alerts = draft.alerts.filter(\n          (alert) => alert.id !== action.payload\n        );\n        break;\n      case getType(actions.userProfileFetched):\n        draft.showProfileCreation = false;\n        draft.userProfile = action.payload;\n        break;\n      case getType(actions.showProfileCreationHandler):\n        draft.showProfileCreation = true;\n        break;\n    }\n  });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\n\nexport const AlertBox = styled.div`\n  position: absolute;\n  top: 0;\n  padding: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const NotificationWrapper = styled(animated.div)`\n  position: relative;\n  margin: 10px 10px 0 10px;\n  max-width: 300px;\n  padding: 20px;\n  background: #ffffff;\n  color: black;\n  display: flex;\n  flex-direction: row;\n  z-index: 10;\n  box-shadow: 1px 7px 14px -5px rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n  text-align: left;\n  align-items: center;\n  button {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    background: none;\n    padding: 0;\n    margin: 0;\n    border: none;\n    cursor: pointer;\n  }\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n    background-color: #55b6a8;\n  }\n  h4 {\n    margin: 0;\n  }\n`;\n","import React from \"react\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { NotificationWrapper } from \"./style\";\n\nexport const Notification: React.FC<{\n  title: string;\n  message: string;\n  clickable?: boolean;\n  style?: React.CSSProperties;\n  onClick?: () => {};\n}> = ({ title, message, onClick, clickable, style }) => {\n  return (\n    <NotificationWrapper style={style}>\n      {clickable && onClick ? (\n        <button onClick={onClick}>\n          <FaTimesCircle size=\"16\" />\n        </button>\n      ) : null}\n      <div\n        style={{ display: \"flex\", flexDirection: \"column\", marginLeft: \"15px\" }}\n      >\n        <div>\n          <h4>{title}</h4>\n        </div>\n        <div style={{ color: \"#878787\" }}>{message}</div>\n      </div>\n    </NotificationWrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../store\";\nimport { Notification } from \".\";\nimport { actions } from \"../../store/actions\";\nimport { useTransition } from \"react-spring\";\nimport { AlertBox } from \"./style\";\n\nexport const NotificationContainer = () => {\n  const dispatch = useDispatch();\n  const alerts = useTypedSelector((state) => state.alerts);\n  const transition = useTransition(alerts, (item) => item.id, {\n    unique: true,\n    trail: 400 / alerts.length,\n    from: { opacity: 0, transform: \"scale(0.7)\" },\n    enter: { opacity: 1, transform: \"scale(1)\" },\n    leave: { opacity: 0, transform: \"scale(0.7)\" },\n  });\n\n  return (\n    <>\n      <AlertBox>\n        {transition.map(({ item, props, key }) => (\n          <Notification\n            style={props}\n            key={key}\n            title={item.title}\n            message={item.message}\n            clickable={item.dismissible}\n            onClick={() => dispatch(actions.alertCancelButtonClicked(item.id))}\n          />\n        ))}\n      </AlertBox>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n  isAuth: boolean;\n}> = ({ component, path, exact, isAuth }) => {\n  return isAuth ? (\n    <Route path={path} exact={exact} component={component} />\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  justify-content: space-between;\n  background: #fff;\n  align-items: center;\n  box-shadow: 0px 22px 24px 0px rgba(46, 51, 51, 0.07);\n`;\n\nexport const NavLinks = styled.nav`\n  display: flex;\n  flex-direction: column;\n  flex:1;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  padding: 20px;\n  font-weight: 0;\n  opacity: 0.6;\n  transition: 0.3s;\n  display: flex;\n  svg {\n    margin-right: 10px;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  background: none;\n  color: #000;\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const UsernameText = styled.p`\n  margin-top: 5px;\n`;\n\nexport const ProfileSpan = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img<{circle: boolean}>`\n${props => props.circle && `\n    border-radius: 50%;\n  `}\n  padding: 0;\n  margin: 0;\n  vertical-align: middle;\n  object-fit: cover;\n  object-position: 50% 50%;\n  align-self:center;\n`;","import React from \"react\";\nimport { Image } from \"./style\";\n\nexport const Avatar: React.FC<{\n  img: string;\n  size?: number;\n  circle?: boolean;\n}> = ({ img, size = 100, circle = false }) => {\n  return (\n    <Image\n      circle={circle}\n      height={size}\n      width={size}\n      src={img}\n      alt=\"placeholder avatar\"\n    />\n  );\n};\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { Avatar } from \"../Avatar\";\nimport { UsernameText, ProfileSpan } from \"./style\";\n\nexport const ProfileInfo = () => {\n  const profileInfo = useTypedSelector((state) => state.userProfile);\n  return (\n    <ProfileSpan>\n      <Avatar\n        circle={true}\n        img={\n          profileInfo?.img\n            ? profileInfo.img\n            : process.env.PUBLIC_URL + \"/placeholder.jpg\"\n        }\n      />\n      <UsernameText>{profileInfo?.name}</UsernameText>\n    </ProfileSpan>\n  );\n};\n","import React from \"react\";\nimport { Wrapper, NavLinks, Link, Button } from \"./style\";\nimport { ProfileInfo } from \"./ProfileInfo\";\nimport { useLocation } from \"react-router-dom\";\nimport { FaLock, FaHome } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nexport const SideMenu = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const isLoggedIn = location.pathname !== \"/\";\n  return isLoggedIn ? (\n    <Wrapper>\n      <ProfileInfo />\n      <NavLinks>\n        <Link exact to=\"/home\" activeStyle={{ opacity: \"1\" }}>\n          <FaHome size=\"24\" />\n          Home\n        </Link>\n      </NavLinks>\n      <Button onClick={() => dispatch(actions.logoutButtonClicked())}>\n        <FaLock /> Logout\n      </Button>\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  @media only screen and (max-width: 768px) {\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 30px 15%;\n  justify-content: center;\n  color: #55b6a8;\n  align-items: center;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background: #55b6a8;\n  color: #fff;\n  width: 300px;\n  h1 {\n    margin: 0;\n  }\n  p {\n    margin: 20px 0;\n  }\n  button {\n    padding: 15px 30px;\n  }\n  @media only screen and (max-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const SignInButton = styled.button`\n  border: 1px solid #fff;\n  background: transparent;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n`;\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, ErrorText, IconContainer } from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions as rootActions } from \"./../../store/actions\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\n    .required(\"You must confirm your password\"),\n});\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: any = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, actions) => {\n        dispatch(\n          rootActions.registrationButtonClicked({\n            email: values.email,\n            password: values.password,\n          })\n        );\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <ErrorText>{errors.confirmPassword}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border: none;\n  background: #fff;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { Wrapper, Button } from \"./style\";\nimport { FaFacebook } from \"react-icons/fa\";\nimport { FcGoogle } from \"react-icons/fc\";\n\nexport const SocialMediaLogin = () => {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <Button\n        onClick={() => dispatch(actions.loginWithFacebookButtonClicked())}\n      >\n        <FaFacebook size=\"50\" color=\"#4267b2\" />\n      </Button>\n      <Button onClick={() => dispatch(actions.loginWithGoogleButtonClicked())}>\n        <FcGoogle size=\"50\" />\n      </Button>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RegistrationForm } from \"../../components/RegistrationForm\";\nimport { SocialMediaLogin } from \"../../components/SocialMediaLogin\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const CreateAccount = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome Back!</h1>\n        <p>Already have an account? Click below to login!</p>\n        <SignInButton\n          onClick={() => dispatch(actions.createAccountButtonClicked())}\n        >\n          Sign In\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Create Account</h1>\n        <SocialMediaLogin />\n        <RegistrationForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n\nexport const ResetPasswordButton = styled.button`\n  border: none;\n  background: none;\n  padding: 20px;\n  color: #55b6a8;\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  ErrorText,\n  IconContainer,\n  ResetPasswordButton,\n} from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const initialValues: { email: string; password: string } = {\n    email: \"\",\n    password: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        dispatch(actions.loginButtonClicked(values));\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <ResetPasswordButton\n            type=\"button\"\n            onClick={() => dispatch(actions.forgotPasswordButtonClicked())}\n          >\n            Forgot your password?\n          </ResetPasswordButton>\n          <Button type=\"submit\">Sign In</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { SocialMediaLogin } from \"../../components/SocialMediaLogin\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const SignIn = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton onClick={() => dispatch(actions.signUpButtonClicked())}>\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Sign In</h1>\n        <SocialMediaLogin />\n        <LoginForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  p {\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n\nexport const BackToLoginButton = styled.button`\n  border: none;\n  background: none;\n  padding: 20px;\n  color: #55b6a8;\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  ErrorText,\n  IconContainer,\n  BackToLoginButton,\n} from \"./style\";\nimport { FaEnvelope } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n});\n\nexport const PasswordReset = () => {\n  const dispatch = useDispatch();\n  const initialValues: { email: string } = {\n    email: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(actions.resetPasswordButtonClicked(values));\n        resetForm();\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          <BackToLoginButton\n            type=\"button\"\n            onClick={() => dispatch(actions.createAccountButtonClicked())}\n          >\n            Back to Login\n          </BackToLoginButton>\n          <Button type=\"submit\">Reset Password</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { PasswordReset } from \"../../components/PasswordReset\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const ForgotPassword = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton onClick={() => dispatch(actions.signUpButtonClicked())}>\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Password Reset</h1>\n        <PasswordReset />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../../store\";\nimport { Wrapper } from \"./style\";\nimport { CreateAccount } from \"./CreateAccount\";\nimport { SignIn } from \"./SignIn\";\nimport { ForgotPassword } from \"./ForgotPassword\";\n\nexport const LoginHandler = () => {\n  let history = useHistory();\n  const mode = useTypedSelector((state) => state.mode);\n  const user = useTypedSelector((state) => state.user);\n  useEffect(() => {\n    if (user) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  return !user ? (\n    <Wrapper>\n      {mode === \"Sign Up\" ? (\n        <CreateAccount />\n      ) : mode === \"Sign In\" ? (\n        <SignIn />\n      ) : (\n        <ForgotPassword />\n      )}\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Input = styled.input`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Field as FormikField } from \"formik\";\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n\nexport const Select = styled.select`\n  border: none;\n  background: none;\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  background: none;\n  border: none;\n`;\n\nexport const Header = styled.div`\n  margin: 10;\n  display: flex;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport { useFormikContext, useField } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { IconContainer, Input, Header, Select, Button } from \"./style\";\nimport { FaCalendar, FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport { getMonth, getYear } from \"date-fns\";\nimport range from \"lodash/range\";\n\nexport const DatePickerInput = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  //@ts-ignore this is a temp hack/fix but don't want to spend loads of time on a typescript error when under time constraints...\n  const [field] = useField(props);\n  const years = range(1910, getYear(new Date()) + 1, 1);\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      selected={field.value ?? null}\n      onChange={(val: any) => {\n        setFieldValue(field.name, val);\n      }}\n      customInput={\n        <IconContainer>\n          <FaCalendar />\n          <Input\n            id=\"dateOfBirth\"\n            name=\"dateOfBirth\"\n            placeholder=\"Date Of Birth\"\n            type=\"dateOfBirth\"\n            autoComplete=\"off\"\n            readOnly\n          ></Input>\n        </IconContainer>\n      }\n      renderCustomHeader={({\n        date,\n        changeYear,\n        changeMonth,\n        decreaseMonth,\n        increaseMonth,\n        prevMonthButtonDisabled,\n        nextMonthButtonDisabled,\n      }) => (\n        <Header>\n          <Button\n            onClick={decreaseMonth}\n            disabled={prevMonthButtonDisabled}\n            type=\"button\"\n          >\n            <FaChevronLeft />\n          </Button>\n          <Select\n            value={months[getMonth(date)]}\n            onChange={({ target: { value } }) =>\n              changeMonth(months.indexOf(value))\n            }\n          >\n            {months.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </Select>\n          <Select\n            value={getYear(date)}\n            onChange={({ target: { value } }) => changeYear(parseInt(value))}\n          >\n            {years.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </Select>\n          <Button\n            onClick={increaseMonth}\n            disabled={nextMonthButtonDisabled}\n            type=\"button\"\n          >\n            <FaChevronRight />\n          </Button>\n        </Header>\n      )}\n    />\n  );\n};\n","import React, { createRef, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Field, Input, Button, ErrorText, IconContainer } from \"./style\";\nimport { FaUpload, FaUser } from \"react-icons/fa\";\nimport { DatePickerInput } from \"../DatePickerInput\";\nimport { Avatar } from \"../Avatar\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../store\";\n\nconst Schema = Yup.object().shape({\n  name: Yup.string()\n    .max(50, \"Maximum 50 characters\")\n    .required(\"Please enter your name\"),\n  dateOfBirth: Yup.string()\n    .required(\"Please select your date of birth\")\n    .required(\"Please enter your date of birth\"),\n  file: Yup.mixed<File>().nullable(),\n});\n\nexport const ProfileCreation = () => {\n  const initialValues: {\n    name: string;\n    dateOfBirth: string;\n    file: File | null;\n  } = {\n    name: \"\",\n    dateOfBirth: \"\",\n    file: null,\n  };\n  const [file, setFile] = useState<File | null>(null);\n  const ref = createRef<HTMLInputElement>();\n  const dispatch = useDispatch();\n  const id = useTypedSelector((state) => state.user?.id);\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        if (id)\n          dispatch(\n            actions.createProfileButtonClicked({\n              id,\n              name: values.name,\n              dateOfBirth: values.dateOfBirth,\n              file: values.file,\n            })\n          );\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched, setFieldValue }) => (\n        <Form>\n          <Avatar\n            img={\n              file\n                ? URL.createObjectURL(file)\n                : process.env.PUBLIC_URL + \"/placeholder.jpg\"\n            }\n            size={200}\n          />\n          <IconContainer>\n            <FaUpload />\n            <Input\n              ref={ref}\n              name=\"file\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.files && event.target.files.length) {\n                  setFile(event.target.files[0]);\n                  setFieldValue(\"file\", event.target.files[0]);\n                } else {\n                  setFile(null);\n                  setFieldValue(\"file\", null);\n                }\n              }}\n            />\n          </IconContainer>\n          {errors.name && touched.name && <ErrorText>{errors.name}</ErrorText>}\n          <IconContainer>\n            <FaUser />\n            <Field id=\"name\" name=\"name\" placeholder=\"Name\" type=\"name\"></Field>\n          </IconContainer>\n          {errors.dateOfBirth && touched.dateOfBirth && (\n            <ErrorText>{errors.dateOfBirth}</ErrorText>\n          )}\n          <DatePickerInput name=\"dateOfBirth\" />\n          <Button type=\"submit\">Update Profile</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: #fff;\n  position: fixed; \n  width:100%;\n  height:100%;\n`;\n\n\nexport const Container = styled.div`\n  padding:30px 25%;\n`;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ProfileCreation } from \"../../components/ProfileCreation\";\nimport { Wrapper, Container } from \"./style\";\n\nexport const ProfileCreationHandler = () => {\n  return ReactDOM.createPortal(\n    <Wrapper>\n      <Container>\n        <ProfileCreation />\n      </Container>\n    </Wrapper>,\n    document.body\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 30px;\n  overflow: hidden;\n  background: #ececec;\n`;\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { ProfileCreationHandler } from \"../ProfileCreationHandler\";\n\nimport { Wrapper } from \"./style\";\n\nexport const HomeHandler = () => {\n  const showProfileCreationPage = useTypedSelector(\n    (state) => state.showProfileCreation\n  );\n  return (\n    <Wrapper>{showProfileCreationPage && <ProfileCreationHandler />}</Wrapper>\n  );\n};\n","import React from \"react\";\r\nimport { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\r\nimport { NotificationContainer } from \"./components/Alert/container\";\r\nimport { PrivateRoute } from \"./components/PrivateRoute\";\r\nimport { SideMenu } from \"./components/SideMenu\";\r\nimport { LoginHandler } from \"./handlers/LoginHandler\";\r\nimport { HomeHandler } from \"./handlers/HomeHandler\";\r\nimport { useTypedSelector } from \"./store\";\r\n\r\nfunction App() {\r\n  const user = useTypedSelector((state) => state.user);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NotificationContainer />\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <SideMenu />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginHandler} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/home\"\r\n            component={HomeHandler}\r\n            isAuth={user !== undefined}\r\n          />\r\n          {user === undefined && <Redirect to={\"/\"} />}\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}