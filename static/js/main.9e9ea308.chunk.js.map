{"version":3,"sources":["store/actions.ts","firebase.ts","store/saga.js","store/rootSaga.ts","store/index.ts","components/Alert/style.ts","components/Alert/index.tsx","components/Alert/container.tsx","components/PrivateRoute/index.tsx","components/SideMenu/style.ts","components/Avatar/style.ts","components/Avatar/index.tsx","components/SideMenu/ProfileInfo.tsx","components/SideMenu/index.tsx","handlers/LoginHandler/style.tsx","components/RegistrationForm/style.tsx","components/RegistrationForm/index.tsx","components/SocialMediaLogin/style.ts","components/SocialMediaLogin/index.tsx","handlers/LoginHandler/CreateAccount.tsx","components/LoginForm/style.tsx","components/LoginForm/index.tsx","handlers/LoginHandler/SignIn.tsx","components/PasswordReset/style.ts","components/PasswordReset/index.tsx","handlers/LoginHandler/ForgotPassword.tsx","handlers/LoginHandler/index.tsx","handlers/UsersHandler/style.tsx","handlers/UsersHandler/index.tsx","App.tsx","index.tsx"],"names":["loginButtonClicked","createAction","logoutButtonClicked","userLogin","userLogout","signUpButtonClicked","actions","createAccountButtonClicked","loginWithFacebookButtonClicked","loginWithGoogleButtonClicked","registrationButtonClicked","forgotPasswordButtonClicked","resetPasswordButtonClicked","alertCreated","alertDisplayed","alertCancelButtonClicked","alertCleared","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","register","email","password","createUserWithEmailAndPassword","catch","error","store","dispatch","id","uuidv4","title","message","duration","undefined","dismissible","login","signInWithEmailAndPassword","loginWithFacebook","signInWithPopup","FacebookAuthProvider","loginWithGoogle","GoogleAuthProvider","resetPassword","sendPasswordResetEmail","then","logout","signOut","registrationWatcher","resetPasswordWatcher","loginWithFacebookWatcher","loginWithGoogleWatcher","loginWatcher","logoutWatcher","authChannelWatcher","cancellationSaga","addAlertSaga","take","payload","confirmPassword","call","console","log","eventChannel","emit","onAuthStateChanged","user","uid","authChannel","put","race","delay","click","rootSaga","all","takeLatest","getType","takeEvery","persistConfig","key","storage","blacklist","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","state","mode","loading","alerts","action","produce","draft","type","filter","alert","createStore","composeWithDevTools","applyMiddleware","run","persistStore","useTypedSelector","useSelector","AlertBox","styled","div","NotificationWrapper","animated","Notification","onClick","clickable","style","size","display","flexDirection","marginLeft","color","NotificationContainer","useDispatch","transition","useTransition","item","unique","trail","length","from","opacity","transform","enter","leave","map","props","PrivateRoute","component","path","exact","isAuth","to","Wrapper","NavLinks","nav","Link","NavLink","Button","button","UsernameText","p","ProfileSpan","span","Image","img","Avatar","src","alt","ProfileInfo","SideMenu","history","useHistory","useLocation","pathname","activeStyle","push","SectionWrapper","MainContainer","SubContainer","SignInButton","Form","FormikForm","Input","FormikField","ErrorText","IconContainer","Schema","Yup","shape","required","min","oneOf","RegistrationForm","initialValues","onSubmit","values","rootActions","validationSchema","errors","touched","name","placeholder","SocialMediaLogin","CreateAccount","ResetPasswordButton","LoginForm","SignIn","BackToLoginButton","PasswordReset","resetForm","ForgotPassword","LoginHandler","useEffect","UsersHandler","App","className","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9ea308.chunk.js","sourcesContent":["import { ActionType, createAction } from \"typesafe-actions\";\nimport { Alert, User } from \"./types\";\n\nconst loginButtonClicked = createAction(\"login button clicked\")<{\n  email: string;\n  password: string;\n}>();\nconst logoutButtonClicked = createAction(\"logout button clicked\")();\nconst userLogin = createAction(\"user logged in\")<User>();\nconst userLogout = createAction(\"user logged out\")();\nconst signUpButtonClicked = createAction(\"sign up button clicked\")();\nconst createAccountButtonClicked = createAction(\n  \"create account button clicked\"\n)();\nconst loginWithFacebookButtonClicked = createAction(\n  \"login with facebook button clicked\"\n)();\nconst loginWithGoogleButtonClicked = createAction(\n  \"login with google button clicked\"\n)();\nconst registrationButtonClicked = createAction(\"registration button clicked\")<{\n  email: string;\n  password: string;\n}>();\nconst forgotPasswordButtonClicked = createAction(\n  \"forgot password button clicked\"\n)();\nconst resetPasswordButtonClicked = createAction(\n  \"reset password button clicked\"\n)<{ email: string }>();\n\nconst alertCreated = createAction(\"alert created\")<Alert>();\nconst alertDisplayed = createAction(\"alert displayed\")<Alert>();\nconst alertCancelButtonClicked = createAction(\"alert cancel button clicked\")<\n  string\n>();\nconst alertCleared = createAction(\"alert cleared\")<string>();\n\nexport const actions = {\n  createAccountButtonClicked,\n  signUpButtonClicked,\n  loginButtonClicked,\n  logoutButtonClicked,\n  userLogin,\n  userLogout,\n  loginWithFacebookButtonClicked,\n  loginWithGoogleButtonClicked,\n  registrationButtonClicked,\n  forgotPasswordButtonClicked,\n  resetPasswordButtonClicked,\n  alertCreated,\n  alertDisplayed,\n  alertCancelButtonClicked,\n  alertCleared,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { eventChannel } from \"redux-saga\";\nimport { actions } from \"./store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { store } from \"./store\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n});\n\nconst auth = firebase.auth();\n\nexport const register = (email: string, password: string) =>\n  void auth\n    .createUserWithEmailAndPassword(email, password)\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const login = (email: string, password: string) =>\n  void auth\n    .signInWithEmailAndPassword(email, password)\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const loginWithFacebook = () =>\n  // firebase\n  void auth\n    .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const loginWithGoogle = () =>\n  // firebase\n  void auth\n    .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n    .catch(function (error: any) {\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const resetPassword = (email: string) =>\n  void auth\n    .sendPasswordResetEmail(email)\n    .then(function () {\n      // Password reset email sent.\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Password Reset\",\n          message: `We've sent a password reset email to ${email}. Please check your inbox.`,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    })\n    .catch(function (error: any) {\n      // error\n      store.dispatch(\n        actions.alertCreated({\n          id: uuidv4(),\n          title: \"Error\",\n          message: error.message,\n          duration: undefined,\n          dismissible: true,\n        })\n      );\n    });\n\nexport const logout = () => void auth.signOut();\n\nexport const subscribeToAuth = () =>\n  eventChannel((emit) => {\n    auth.onAuthStateChanged((user) => {\n      emit(user ? { email: user.email, id: user.uid } : false);\n    });\n    return () => {\n      console.log(\"destroy chan auth\");\n    };\n  });\n","import { actions } from \"./actions\";\nimport { take, put, call, race, delay } from \"redux-saga/effects\";\nimport {\n  subscribeToAuth,\n  login,\n  logout,\n  loginWithFacebook,\n  loginWithGoogle,\n  register,\n  resetPassword,\n} from \"./../firebase\";\n\nexport function* registrationWatcher() {\n  while (true) {\n    const {\n      payload: { email, password, confirmPassword },\n    } = yield take(actions.registrationButtonClicked);\n    try {\n      yield call(register, email, password, confirmPassword);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* resetPasswordWatcher() {\n  while (true) {\n    const {\n      payload: { email },\n    } = yield take(actions.resetPasswordButtonClicked);\n    try {\n      yield call(resetPassword, email);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* loginWithFacebookWatcher() {\n  try {\n    yield call(loginWithFacebook);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* loginWithGoogleWatcher() {\n  try {\n    yield call(loginWithGoogle);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* loginWatcher() {\n  while (true) {\n    const {\n      payload: { email, password },\n    } = yield take(actions.loginButtonClicked);\n    try {\n      yield call(login, email, password);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* logoutWatcher() {\n  while (true) {\n    yield take(actions.logoutButtonClicked);\n    yield call(logout);\n  }\n}\n\nexport function* authChannelWatcher() {\n  const authChannel = yield subscribeToAuth();\n  while (true) {\n    const user = yield take(authChannel);\n    if (user)\n      yield put(\n        actions.userLogin({\n          email: user.email,\n          id: user.id,\n        })\n      );\n    else yield put(actions.userLogout());\n  }\n}\n\nfunction* cancellationSaga(id) {\n  while (true) {\n    const { payload } = yield take(actions.alertCancelButtonClicked);\n    if (id === payload) return;\n  }\n}\n\nexport function* addAlertSaga({ payload }) {\n  try {\n    yield put(actions.alertDisplayed(payload));\n    if (payload.duration) {\n      yield race({\n        delay: delay(payload.duration),\n        click: cancellationSaga(payload.id),\n      });\n    } else {\n      yield race({\n        click: cancellationSaga(payload.id),\n      });\n    }\n\n    yield put(actions.alertCleared(payload.id));\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { all, takeLatest, takeEvery } from \"@redux-saga/core/effects\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"./actions\";\nimport {\n  loginWatcher,\n  logoutWatcher,\n  resetPasswordWatcher,\n  authChannelWatcher,\n  loginWithFacebookWatcher,\n  loginWithGoogleWatcher,\n  registrationWatcher,\n  addAlertSaga,\n} from \"./saga\";\n\nexport function* rootSaga() {\n  yield all([\n    loginWatcher(),\n    authChannelWatcher(),\n    logoutWatcher(),\n    resetPasswordWatcher(),\n    registrationWatcher(),\n    takeLatest(\n      getType(actions.loginWithFacebookButtonClicked),\n      loginWithFacebookWatcher\n    ),\n    takeLatest(\n      getType(actions.loginWithGoogleButtonClicked),\n      loginWithGoogleWatcher\n    ),\n    takeEvery(getType(actions.alertCreated), addAlertSaga),\n  ]);\n}\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootSaga } from \"./rootSaga\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { Alert, User } from \"./types\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"user\", \"mode\", \"alerts\", \"loading\"],\n};\n\nconst initialState = () => ({\n  mode: \"Sign In\" as \"Sign In\" | \"Sign Up\" | \"Forgot Password\",\n  user: undefined as undefined | User,\n  loading: false,\n  alerts: [] as Alert[],\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.createAccountButtonClicked):\n        draft.mode = \"Sign In\";\n        break;\n      case getType(actions.signUpButtonClicked):\n        draft.mode = \"Sign Up\";\n        break;\n      case getType(actions.loginButtonClicked):\n        draft.loading = true;\n        break;\n      case getType(actions.userLogin):\n        draft.user = action.payload;\n        draft.loading = false;\n        break;\n      case getType(actions.logoutButtonClicked):\n      case getType(actions.userLogout):\n        draft.user = undefined;\n        break;\n      case getType(actions.forgotPasswordButtonClicked):\n        draft.mode = \"Forgot Password\";\n        break;\n      case getType(actions.alertDisplayed):\n        draft.alerts = [...draft.alerts, action.payload];\n        break;\n      case getType(actions.alertCleared):\n        draft.alerts = draft.alerts.filter(\n          (alert) => alert.id !== action.payload\n        );\n        break;\n    }\n  });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\n\nexport const AlertBox = styled.div`\n  position: absolute;\n  top: 0;\n  padding: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const NotificationWrapper = styled(animated.div)`\n  position: relative;\n  margin: 10px 10px 0 10px;\n  max-width: 300px;\n  padding: 20px;\n  background: #ffffff;\n  color: black;\n  display: flex;\n  flex-direction: row;\n  z-index: 10;\n  box-shadow: 1px 7px 14px -5px rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n  text-align: left;\n  align-items: center;\n  button {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    background: none;\n    padding: 0;\n    margin: 0;\n    border: none;\n    cursor: pointer;\n  }\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n    background-color: #55b6a8;\n  }\n  h4 {\n    margin: 0;\n  }\n`;\n","import React from \"react\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { NotificationWrapper } from \"./style\";\n\nexport const Notification: React.FC<{\n  title: string;\n  message: string;\n  clickable?: boolean;\n  style?: React.CSSProperties;\n  onClick?: () => {};\n}> = ({ title, message, onClick, clickable, style }) => {\n  return (\n    <NotificationWrapper style={style}>\n      {clickable && onClick ? (\n        <button onClick={onClick}>\n          <FaTimesCircle size=\"16\" />\n        </button>\n      ) : null}\n      <div\n        style={{ display: \"flex\", flexDirection: \"column\", marginLeft: \"15px\" }}\n      >\n        <div>\n          <h4>{title}</h4>\n        </div>\n        <div style={{ color: \"#878787\" }}>{message}</div>\n      </div>\n    </NotificationWrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../store\";\nimport { Notification } from \".\";\nimport { actions } from \"../../store/actions\";\nimport { useTransition } from \"react-spring\";\nimport { AlertBox } from \"./style\";\n\nexport const NotificationContainer = () => {\n  const dispatch = useDispatch();\n  const alerts = useTypedSelector((state) => state.alerts);\n  const transition = useTransition(alerts, (item) => item.id, {\n    unique: true,\n    trail: 400 / alerts.length,\n    from: { opacity: 0, transform: \"scale(0.7)\" },\n    enter: { opacity: 1, transform: \"scale(1)\" },\n    leave: { opacity: 0, transform: \"scale(0.7)\" },\n  });\n\n  return (\n    <>\n      <AlertBox>\n        {transition.map(({ item, props, key }) => (\n          <Notification\n            style={props}\n            key={key}\n            title={item.title}\n            message={item.message}\n            clickable={item.dismissible}\n            onClick={() => dispatch(actions.alertCancelButtonClicked(item.id))}\n          />\n        ))}\n      </AlertBox>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n  isAuth: boolean;\n}> = ({ component, path, exact, isAuth }) => {\n  return isAuth ? (\n    <Route path={path} exact={exact} component={component} />\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: Yellow;\n  padding: 30px;\n  justify-content: space-between;\n  background: #55b6a8;\n  p {\n    color: #fff;\n    margin: 0;\n    font-weight: 400;\n  }\n  align-items: center;\n  box-shadow: 0px 22px 24px 0px rgba(46, 51, 51, 0.07);\n`;\n\nexport const NavLinks = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #fff;\n  padding: 20px;\n  font-weight: 0;\n  opacity: 0.6;\n  transition: 0.3s;\n  display: flex;\n  svg {\n    margin-right: 10px;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  background: none;\n  color: #fff;\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const UsernameText = styled.p`\n  margin-top: 10px;\n`;\n\nexport const ProfileSpan = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  padding: 0;\n  margin: 0;\n  vertical-align: middle;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n`;\n","import React from \"react\";\nimport { Image } from \"./style\";\n\nexport const Avatar: React.FC<{ img: string }> = ({ img }) => {\n  return <Image src={img} alt=\"placeholder avatar\" />;\n};\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { Avatar } from \"../Avatar\";\nimport { UsernameText, ProfileSpan } from \"./style\";\n\nexport const ProfileInfo = () => {\n  const user = useTypedSelector((state) => state.user);\n  return (\n    <ProfileSpan>\n      <Avatar img={process.env.PUBLIC_URL + \"/placeholder.jpg\"} />\n      <UsernameText>{user?.email}</UsernameText>\n    </ProfileSpan>\n  );\n};\n","import React from \"react\";\nimport { Wrapper, NavLinks, Link, Button } from \"./style\";\nimport { ProfileInfo } from \"./ProfileInfo\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaLock, FaUsers } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nexport const SideMenu = () => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const location = useLocation();\n  const isLoggedIn = location.pathname !== \"/\";\n  const handleLogout = () => {\n    dispatch(actions.logoutButtonClicked());\n    history.push(\"/\");\n  };\n  return isLoggedIn ? (\n    <Wrapper>\n      <ProfileInfo />\n      <NavLinks>\n        <Link exact to=\"/users\" activeStyle={{ opacity: \"1\" }}>\n          <FaUsers size=\"24\" />\n          Users\n        </Link>\n      </NavLinks>\n      <Button onClick={handleLogout}>\n        <FaLock /> Logout\n      </Button>\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 30px 15%;\n  justify-content: center;\n  color: #55b6a8;\n  align-items: center;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background: #55b6a8;\n  color: #fff;\n  width: 300px;\n  h1 {\n    margin: 0;\n  }\n  p {\n    margin: 20px 0;\n  }\n  button {\n    padding: 15px 30px;\n  }\n`;\n\nexport const SignInButton = styled.button`\n  border: 1px solid #fff;\n  background: transparent;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n`;\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, ErrorText, IconContainer } from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions as rootActions } from \"./../../store/actions\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\n    .required(\"You must confirm your password\"),\n});\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: any = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, actions) => {\n        dispatch(\n          rootActions.registrationButtonClicked({\n            email: values.email,\n            password: values.password,\n          })\n        );\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <ErrorText>{errors.confirmPassword}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border: none;\n  background: #fff;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { Wrapper, Button } from \"./style\";\nimport { FaFacebook } from \"react-icons/fa\";\nimport { FcGoogle } from \"react-icons/fc\";\n\nexport const SocialMediaLogin = () => {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <Button\n        onClick={() => dispatch(actions.loginWithFacebookButtonClicked())}\n      >\n        <FaFacebook size=\"50\" color=\"#4267b2\" />\n      </Button>\n      <Button onClick={() => dispatch(actions.loginWithGoogleButtonClicked())}>\n        <FcGoogle size=\"50\" />\n      </Button>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RegistrationForm } from \"../../components/RegistrationForm\";\nimport { SocialMediaLogin } from \"../../components/SocialMediaLogin\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const CreateAccount = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome Back!</h1>\n        <p>Already have an account? Click below to login!</p>\n        <SignInButton\n          onClick={() => dispatch(actions.createAccountButtonClicked())}\n        >\n          Sign In\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Create Account</h1>\n        <SocialMediaLogin />\n        <RegistrationForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n\nexport const ResetPasswordButton = styled.button`\n  border: none;\n  background: none;\n  padding: 20px;\n  color: #55b6a8;\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  ErrorText,\n  IconContainer,\n  ResetPasswordButton,\n} from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const initialValues: { email: string; password: string } = {\n    email: \"\",\n    password: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        dispatch(actions.loginButtonClicked(values));\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <ResetPasswordButton\n            type=\"button\"\n            onClick={() => dispatch(actions.forgotPasswordButtonClicked())}\n          >\n            Forgot your password?\n          </ResetPasswordButton>\n          <Button type=\"submit\">Sign In</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { SocialMediaLogin } from \"../../components/SocialMediaLogin\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const SignIn = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton onClick={() => dispatch(actions.signUpButtonClicked())}>\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Sign In</h1>\n        <SocialMediaLogin />\n        <LoginForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  p {\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n\nexport const BackToLoginButton = styled.button`\n  border: none;\n  background: none;\n  padding: 20px;\n  color: #55b6a8;\n`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  ErrorText,\n  IconContainer,\n  BackToLoginButton,\n} from \"./style\";\nimport { FaEnvelope } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n});\n\nexport const PasswordReset = () => {\n  const dispatch = useDispatch();\n  const initialValues: { email: string } = {\n    email: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(actions.resetPasswordButtonClicked(values));\n        resetForm();\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          <BackToLoginButton\n            type=\"button\"\n            onClick={() => dispatch(actions.createAccountButtonClicked())}\n          >\n            Back to Login\n          </BackToLoginButton>\n          <Button type=\"submit\">Reset Password</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { PasswordReset } from \"../../components/PasswordReset\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const ForgotPassword = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton onClick={() => dispatch(actions.signUpButtonClicked())}>\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Password Reset</h1>\n        <PasswordReset />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../../store\";\nimport { Wrapper } from \"./style\";\nimport { CreateAccount } from \"./CreateAccount\";\nimport { SignIn } from \"./SignIn\";\nimport { ForgotPassword } from \"./ForgotPassword\";\n\nexport const LoginHandler = () => {\n  let history = useHistory();\n  const mode = useTypedSelector((state) => state.mode);\n  const user = useTypedSelector((state) => state.user);\n  useEffect(() => {\n    if (user) {\n      history.push(\"/users\");\n    }\n  }, [user, history]);\n\n  return !user ? (\n    <Wrapper>\n      {mode === \"Sign Up\" ? (\n        <CreateAccount />\n      ) : mode === \"Sign In\" ? (\n        <SignIn />\n      ) : (\n        <ForgotPassword />\n      )}\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 30px;\n  overflow: hidden;\n  /* padding: 30px 20px; */\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./style\";\n\nexport const UsersHandler = () => {\n  return <Wrapper>users</Wrapper>;\n};\n","import React from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport { NotificationContainer } from \"./components/Alert/container\";\r\nimport { PrivateRoute } from \"./components/PrivateRoute\";\r\nimport { SideMenu } from \"./components/SideMenu\";\r\nimport { LoginHandler } from \"./handlers/LoginHandler\";\r\nimport { UsersHandler } from \"./handlers/UsersHandler\";\r\nimport { useTypedSelector } from \"./store\";\r\n\r\nfunction App() {\r\n  const user = useTypedSelector((state) => state.user);\r\n  return (\r\n    <div className=\"App\">\r\n      <NotificationContainer />\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <SideMenu />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginHandler} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/users\"\r\n            component={UsersHandler}\r\n            isAuth={user !== undefined}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}